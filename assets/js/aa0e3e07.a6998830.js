"use strict";(self.webpackChunk_busy_hour_docs=self.webpackChunk_busy_hour_docs||[]).push([[3654],{124:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>o,contentTitle:()=>d,default:()=>g,frontMatter:()=>a,metadata:()=>c,toc:()=>h});var t=n(1527),i=n(6225),r=n(4752);const a={sidebar_position:2,sidebar_label:"Sending Messages"},d="Sending Messages",c={id:"react-native/v1/messaging/sending-messages",title:"Sending Messages",description:"In this section, we will show you how to send messages from the messaging service.",source:"@site/docs/react-native/v1/messaging/sending-messages.mdx",sourceDirName:"react-native/v1/messaging",slug:"/react-native/v1/messaging/sending-messages",permalink:"/docs/react-native/v1/messaging/sending-messages",draft:!1,unlisted:!1,editUrl:"https://github.com/Busy-Hour-Studio/busy-hour-docs/tree/main/docs/react-native/v1/messaging/sending-messages.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,sidebar_label:"Sending Messages"},sidebar:"tutorialSidebar",previous:{title:"Listening to Messages",permalink:"/docs/react-native/v1/messaging/listening-to-messages"},next:{title:"Managing Group Messages",permalink:"/docs/react-native/v1/messaging/managing-group-messages"}},o={},h=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Sending Messages",id:"sending-messages-1",level:2},{value:"Quick Example",id:"quick-example",level:3}];function l(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h1,{id:"sending-messages",children:"Sending Messages"}),"\n",(0,t.jsx)(s.p,{children:"In this section, we will show you how to send messages from the messaging service."}),"\n",(0,t.jsx)(s.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsx)(r.Z,{}),"\n",(0,t.jsx)(s.h2,{id:"sending-messages-1",children:"Sending Messages"}),"\n",(0,t.jsxs)(s.p,{children:["To start sending a messages, you will need to use the ",(0,t.jsx)(s.code,{children:"useChatMessages"})," which is exported from the ",(0,t.jsx)(s.code,{children:"@busy-hour/react-native/hooks"})," package. For more detail about the usage of the hook you can read more about the useChatMessages from the ",(0,t.jsx)(s.a,{href:"./listening-to-messages#listen-to-specific-incoming-messages",children:"Listening to Messages"}),". To send a message, you can use the ",(0,t.jsx)(s.code,{children:"sendMessage"})," function which is one of the return properties of the ",(0,t.jsx)(s.code,{children:"useChatMessages"})," hook. To use it, you need to pass some properties which detailed as below."]}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Property"}),(0,t.jsx)(s.th,{children:"Type"}),(0,t.jsx)(s.th,{children:"Description"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"message"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"string"})}),(0,t.jsx)(s.td,{children:"The message to send"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"custom"})}),(0,t.jsxs)(s.td,{children:[(0,t.jsx)(s.code,{children:"string"})," (optional)"]}),(0,t.jsx)(s.td,{children:"The custom message to send (JSON stringify)"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"attachments"})}),(0,t.jsxs)(s.td,{children:[(0,t.jsx)(s.code,{children:"attachment[]"})," (optional)"]}),(0,t.jsx)(s.td,{children:"The attachments data to send"})]})]})]}),"\n",(0,t.jsxs)(s.p,{children:["For more detail about the ",(0,t.jsx)(s.code,{children:"attachment"})," object in case you want to pass it, you can read more about it below."]}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Property"}),(0,t.jsx)(s.th,{children:"Type"}),(0,t.jsx)(s.th,{children:"Description"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"uri"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"string"})}),(0,t.jsx)(s.td,{children:"URI of the attachment"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"name"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"string"})}),(0,t.jsx)(s.td,{children:"Name of the attachment"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"type"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"string"})}),(0,t.jsx)(s.td,{children:"Type of the attachment"})]})]})]}),"\n",(0,t.jsx)(s.h3,{id:"quick-example",children:"Quick Example"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-tsx",metastring:'title="src/main.tsx"',children:"\nimport React, { useEffect, useCallback } from 'react'\nimport { useChatMessages } from '@busy-hour/react-native/hooks/v1'\n\nexport default function Main() {\n  // highlight-start\n  const { mesages, sendMessage } = useChatMessages({\n    type: 'private',\n    chatId: 'the-chat-id-to-listen-to',\n  })\n  // highlight-end\n\n  // highlight-start\n  const sendNewMessage = useCallback((payload: unknown) => {\n    sendMessage(payload)\n  }, [sendMessage])\n  // highlight-end\n\n  return <MainApp />\n}\n\n"})})]})}function g(e={}){const{wrapper:s}={...(0,i.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},4752:(e,s,n)=>{n.d(s,{Z:()=>r});var t=n(3448),i=(n(959),n(1527));const r=function(){return(0,i.jsxs)("ol",{children:[(0,i.jsxs)("li",{children:["App Initialized (see"," ",(0,i.jsx)(t.Z,{to:"../../getting-started#initializing-busy-hour-projectapp)",children:"Initializing Busy Hour Project/App"}),")"]}),(0,i.jsxs)("li",{children:["Main Service Initialized (see",(0,i.jsx)(t.Z,{to:"../../getting-started#initializing-busy-hour-main-service",children:"Initializing Busy Hour Main Service"}),")"]}),(0,i.jsxs)("li",{children:["Messaging Service Initialized (see"," ",(0,i.jsx)(t.Z,{to:"../../initializing-services#initializing-messaging",children:"Initializing Messaging"}),")"]})]})}},6225:(e,s,n)=>{n.d(s,{Z:()=>d,a:()=>a});var t=n(959);const i={},r=t.createContext(i);function a(e){const s=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(r.Provider,{value:s},e.children)}}}]);