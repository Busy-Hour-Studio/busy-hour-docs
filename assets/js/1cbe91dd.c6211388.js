"use strict";(self.webpackChunk_busy_hour_docs=self.webpackChunk_busy_hour_docs||[]).push([[2260],{4418:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>g});var t=s(1527),i=s(6225);const r={sidebar_position:3,sidebar_label:"Messaging Worker"},a="Messaging Worker",o={id:"react/messaging-worker",title:"Messaging Worker",description:"To setup messaging service, you need to add a messaging worker on your site at your public directory. You can do that by creating a messaging-init-sw.js file in the public directory and add the following code.",source:"@site/docs/react/messaging-worker.mdx",sourceDirName:"react",slug:"/react/messaging-worker",permalink:"/docs/react/messaging-worker",draft:!1,unlisted:!1,editUrl:"https://github.com/Busy-Hour-Studio/busy-hour-docs/tree/main/docs/react/messaging-worker.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,sidebar_label:"Messaging Worker"},sidebar:"tutorialSidebar",previous:{title:"Initializing Services",permalink:"/docs/react/initializing-services"},next:{title:"v1 React",permalink:"/docs/react/v1"}},c={},g=[];function d(e){const n={code:"code",h1:"h1",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"messaging-worker",children:"Messaging Worker"}),"\n",(0,t.jsxs)(n.p,{children:["To setup messaging service, you need to add a messaging worker on your site at your ",(0,t.jsx)(n.code,{children:"public"})," directory. You can do that by creating a ",(0,t.jsx)(n.code,{children:"messaging-init-sw.js"})," file in the ",(0,t.jsx)(n.code,{children:"public"})," directory and add the following code."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",metastring:'title="public/messaging-init-sw.js"',children:"\n/* eslint-disable no-undef */\n// Give the service worker access to Firebase Messaging.\n// Note that you can only use Firebase Messaging here. Other Firebase libraries\n// are not available in the service worker.\nimportScripts(\n  'https://www.gstatic.com/firebasejs/10.5.2/firebase-app-compat.js'\n);\nimportScripts(\n  'https://www.gstatic.com/firebasejs/10.5.2/firebase-messaging-compat.js'\n);\n\n/** @typedef {{\n * uri: string;\n * name: string;\n * type: string;\n * }} Attachment */\n\n/** @typedef {{\n * message: string;\n * attachments: Attachment[];\n * custom: string;\n * type: string;\n * }} MessageBody */\n\ntry {\n  const url = new URL(location);\n  /** @type {import('firebase/app').FirebaseOptions} */\n  const config = JSON.parse(url.searchParams.get('config'));\n\n  /** @type {import('firebase/app').FirebaseApp} */\n  const app = firebase.initializeApp(config, config.appId);\n  /** @type {import('firebase/messaging').Messaging} */\n  const messaging = firebase.messaging(app);\n\n  // Modify in here to handle the notification on background\n  messaging.onBackgroundMessage(\n    /** @type {import('firebase/messaging').MessagePayload} */\n    async (message) => {\n      if (!message.data || !message.data['busy-hour']) return;\n\n      /** @type {MessageBody} */\n      const payload = JSON.parse(message.data['busy-hour'] || '{}');\n\n      // Show the notification using the payload with the showNotification functions\n      // self.registration.showNotification\n    }\n  );\n} catch (err) {\n  console.warn('No config found.');\n}\n\n"})})]})}function p(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},6225:(e,n,s)=>{s.d(n,{Z:()=>o,a:()=>a});var t=s(959);const i={},r=t.createContext(i);function a(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);